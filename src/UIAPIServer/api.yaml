openapi: 3.0.1
info:
  title: Mojaloop Payment Manager Mgmt API
  version: 1.0.0
paths:
  /health:
    get:
      summary: Health check endpoint
      description: This endpoint checks the health of the endpoint.
      tags:
        - Health
      responses:
        200:
          description: Returns empty body if the scheme adapter outbound transfers service is running.

  /transfers:
    get:
      summary: Retrieves all transfers
      operationId: findAllTransfers
      parameters:
        - in: query
          name: startTimestamp
          required: false
          schema:
            $ref: "#/components/schemas/Timestamp"
        - in: query
          name: endTimestamp
          required: false
          schema:
            $ref: "#/components/schemas/Timestamp"
        - in: query
          name: id
          required: false
          schema:
            type: string
        - in: query
          name: institution
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            $ref: "#/components/schemas/TransferStatus"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transfer'

  /transfers/{transferId}:
    get:
      summary: Retrieves a transfer
      operationId: findTransfer
      parameters:
        - name: transferId
          in: path
          description: UUID of the transfer to get
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'

  /hourlyFlow:
    get:
      summary: Retrieves hourly flow data
      operationId: findHourlyFlow
      parameters:
        - in: query
          name: hoursPrevious
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 720
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flow'

  /minuteSuccessfulTransferPerc:
    get:
      summary: Retrieves minute by minute successful transfer percentage data
      operationId: findMinuteSuccessfulTransfer
      parameters:
        - in: query
          name: minutePrevious
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 1440
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuccessfulTransferPerc'
  /minuteAverageTransferResponseTime:
    get:
      summary: Retrieves minute by minute average transfer response time data
      operationId: findMinuteAverageTransferResponseTime
      parameters:
        - in: query
          name: minutePrevious
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 1440
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AverageTransferResponseTime'
  /transferStatusSummary:
    get:
      summary: Retrieves transfers status summary
  /balances:
    get:
      summary: 'Retrieves position, reserved, committed balances for a given time-period '
      operationId: findBalances
      parameters:
        - in: query
          name: startTimestamp
          required: false
          schema:
            $ref: "#/components/schemas/Timestamp"
        - in: query
          name: endTimestamp
          required: false
          schema:
            $ref: "#/components/schemas/Timestamp"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    count:
                      type: integer
                    status:
                      $ref: '#/components/schemas/TransferStatus'
                  $ref: '#/components/schemas/Balances'

components:
  schemas:
    Batch:
      type: object
      properties:
        id:
          type: integer
        status:
          type: string
          enum:
          - OPEN
          - ON TRACK
          - HAS ERRORS
          - OVERDUE
        transferCount:
          type: integer
        transferTotals:
          type: array
          items:
            type: object
            properties:
              netValue:
                $ref: '#/components/schemas/Amount'
              currency:
                $ref: '#/components/schemas/Currency'
        errorCount:
          type: integer
        startingTimestamp:
          $ref: '#/components/schemas/Timestamp'
        closingTimestamp:
          $ref: '#/components/schemas/Timestamp'
    Transfer:
      type: object
      properties:
        id:
          type: string
        batchId:
          type: integer
        institution:
          type: string
        direction:
          type: string
          enum:
          - INBOUND
          - OUTBOUND
        currency:
          $ref: '#/components/schemas/Currency'
        amount:
          $ref: '#/components/schemas/Amount'
        type:
          type: string
          enum:
          - P2P
        status:
          $ref: "#/components/schemas/TransferStatus"
        initiatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
        confirmationNumber:
          type: integer
        sender:
          type: string
        recipient:
          type: string
        details:
          type: string
    TransferDetails:
      type: object
      properties:
        id:
          type: string
        confirmationNumber:
          type: integer
        amount:
          $ref: '#/components/schemas/Amount'
        sender:
          type: string
        recipient:
          type: string
        details:
          type: string
        status:
          $ref: "#/components/schemas/TransferStatus"

    Error:
      type: object
      properties:
        id:
          type: integer
        direction:
          type: string
          enum:
          - INBOUND
          - OUTBOUND
        type:
          type: string
          enum:
          - P2P
        currency:
          $ref: '#/components/schemas/Currency'
        value:
          $ref: '#/components/schemas/Amount'
        errorType:
          type: string
          enum:
          - FROM HUB
        committedDate:
          $ref: '#/components/schemas/Timestamp'
    Balances:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        position:
          $ref: '#/components/schemas/Amount'
        reserved:
          $ref: '#/components/schemas/Amount'
        committed:
          $ref: '#/components/schemas/Amount'
        liquidity:
          $ref: '#/components/schemas/Amount'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
    Flow:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        inbound:
          $ref: '#/components/schemas/Amount'
        outbound:
          $ref: '#/components/schemas/Amount'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
    SuccessfulTransferPerc:
      type: object
      properties:
        percentage:
          type: integer
          minimum: 0
          maximum: 100
        timestamp:
          $ref: '#/components/schemas/Timestamp'
    AverageTransferResponseTime:
      type: object
      properties:
        averageResponseTime:
          type: integer
        timestamp:
          $ref: '#/components/schemas/Timestamp'
    Timestamp:
      title: Timestamp
      type: string
      pattern: >-
        ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
      description: >-
        The API data type DateTime is a JSON String in a lexical format that is
        restricted by a regular expression for interoperability reasons. The
        format is according to ISO 8601, expressed in a combined date, time and
        time zone format. A more readable version of the format is
        yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples -
        "2016-05-24T08:38:08.699-04:00", "2016-05-24T08:38:08.699Z" (where Z
        indicates Zulu time zone, same as UTC).

    TransferStatus:
      description: Transfer statuses
      type: string
      enum:
        - SUCCESS
        - PENDING
        - ERROR

    Currency:
      title: CurrencyEnum
      description: >-
        The currency codes defined in ISO 4217 as three-letter alphabetic codes
        are used as the standard naming representation for currencies.
      type: string
      minLength: 3
      maxLength: 3
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BRL
        - BSD
        - BTN
        - BWP
        - BYN
        - BZD
        - CAD
        - CDF
        - CHF
        - CLP
        - CNY
        - COP
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GGP
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - IMP
        - INR
        - IQD
        - IRR
        - ISK
        - JEP
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SPL
        - SRD
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TVD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XCD
        - XDR
        - XOF
        - XPF
        - YER
        - ZAR
        - ZMW
        - ZWD
    Amount:
      title: Amount
      type: string
      pattern: '^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$'
      description: >-
        The API data type Amount is a JSON String in a canonical format that is
        restricted by a regular expression for interoperability reasons. This
        pattern does not allow any trailing zeroes at all, but allows an amount
        without a minor currency unit. It also only allows four digits in the
        minor currency unit; a negative value is not allowed. Using more than 18
        digits in the major currency unit is not allowed.
